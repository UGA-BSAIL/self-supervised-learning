# Specification for the raw MARS dataset.
mars_dataset_spec:
  type: yaml.YAMLDataSet
  filepath: data/01_raw/mars_dataset.yml

mars_dataset_meta:
  type: pandas.FeatherDataSet
  filepath: data/05_model_input/mars_dataset_meta.feather
  versioned: True

_model_args: &model_args
  type: tensorflow.TensorFlowModelDataset
  load_args:
    # Compiling during loading doesn't work with custom loss functions.
    compile: False
  save_args:
    save_format: h5
  versioned: True

# Don't bother copying the untrained model, as this wastes a lot of time
# if your disk is slow.
initial_model:
  type: MemoryDataSet
  copy_mode: assign

initial_rotnet_model:
  type: MemoryDataSet
  copy_mode: assign

initial_colorization_model:
  type: MemoryDataSet
  copy_mode: assign

encoder_model:
  type: MemoryDataSet
  copy_mode: assign

# Saved model from the best epoch.
best_model:
  filepath: ${output_data_dir}/06_models/best.hd5
  << : *model_args

# Saved model from the final epoch.
last_model:
  filepath: ${output_data_dir}/06_models/last.hd5
  << : *model_args

# Saved model, produced at the end of RotNet pre-training.
pretrained_rotnet_model_output:
  filepath: ${output_data_dir}/06_models/pretrained_rotnet.hd5
  << : *model_args

# Same, but a version used as input for transfer learning.
pretrained_rotnet_model:
  filepath: data/06_models/pretrained_rotnet.hd5
  << : *model_args

# Saved model, produced at the end of RotNet pre-training.
pretrained_colorization_model_output:
  filepath: ${output_data_dir}/06_models/pretrained_colorization.hd5
  << : *model_args

# Same, but a version used as input for transfer learning.
pretrained_colorization_model:
  filepath: data/06_models/pretrained_colorization.hd5
  << : *model_args
